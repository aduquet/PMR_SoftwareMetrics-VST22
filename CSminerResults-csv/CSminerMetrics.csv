,cyclomatic_complexity,tloc,sloc_whbl,sloc_statements_wc,nloc_whbl,nloc,token_count,start_line,end_line,full_parameters,argDT,numArg,numLoops,numVariablesDeclared,numAritOper,numExternalMethods,return,Total_return,TotalVariablesReturned,returnType,ext
add_values.java,2,9,9,6,6,7,42,2,8,['Integer [ ] a'],['array_Integer'],1,1,2,1,1,True,1,1,int ,java
array_calc.java,2,11,10,7,7,8,60,3,10,"['Integer [ ] a', ' Integer k']","['array_Integer', 'Integer ']",2,1,1,1,2,True,1,1,array_int ,java
array_copy.java,2,12,10,7,7,8,55,4,11,['Integer [ ] a'],['array_Integer'],1,1,1,0,2,True,1,1,array_int ,java
autoCorrelation.java,2,12,10,7,7,8,79,4,11,"['Double [ ] data', ' Integer lag', ' Double mean', ' Double variance']","['array_Double', 'Integer ', 'Double ', 'Double ']",4,1,3,5,1,True,1,1,double ,java
average.java,2,9,9,6,6,7,46,2,8,['Integer [ ] a'],['array_Integer'],1,1,2,2,2,True,1,1,double ,java
bi_SearchFromTo.java,4,20,20,15,15,18,100,2,19,"['Double [ ] elements', ' Double key', ' Integer from', ' Integer to']","['array_Double', 'Double ', 'Integer ', 'Integer ']",4,1,4,6,0,True,2,1,array_double ,java
bubble.java,4,19,17,12,12,15,99,4,18,['Integer [ ] a'],['array_Integer'],1,2,3,2,1,True,1,1,array_Integer ,java
cal_AbsoluteDiff.java,4,17,15,10,10,13,83,4,16,['Double [ ] z'],['array_Double'],1,1,1,1,3,True,3,1,array_double ,java
cal_Diff.java,2,11,9,6,6,7,66,4,10,"['final double [ ] x', ' final double [ ] y']","['array_double', 'array_double']",2,1,1,1,2,True,1,1,array_double ,java
cal_DividedDiff.java,3,16,16,12,12,14,142,2,15,"['final double x [ ]', ' final double y [ ]']","['array_double', 'array_double']",2,2,4,2,2,True,1,1,array_double ,java
canberraDist.java,4,13,11,8,8,9,105,4,12,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,4,6,4,True,1,1,array_double ,java
chebyshevDist.java,4,18,16,11,11,14,108,4,17,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,3,1,4,True,2,1,array_double ,java
checkNonNegative.java,3,12,10,6,6,8,45,4,11,['final double [ ] in'],['array_double'],1,1,1,0,1,True,2,1,array_boolean ,java
checkPositive.java,3,12,10,6,6,8,45,4,11,['final double [ ] in'],['array_double'],1,1,1,0,1,True,2,1,array_boolean ,java
check_equal.java,4,15,13,8,8,11,67,4,14,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,0,1,True,3,1,array_Integer ,java
check_eq_tolerance.java,4,15,13,8,8,11,77,4,14,"['Double [ ] a', ' Double [ ] b', ' Double tol']","['array_Double', 'array_Double', 'Double ']",3,1,1,0,1,True,3,1,array_Double ,java
chiSquare.java,5,29,27,21,21,25,188,4,28,"['Double [ ] expected', ' Double [ ] observed']","['array_Double', 'array_Double']",2,2,9,12,4,True,1,1,array_double ,java
clip.java,4,19,17,12,12,15,101,4,18,"['Integer [ ] a', ' Integer lowerLim', ' Integer upperLim']","['array_Integer', 'Integer ', 'Integer ']",3,1,1,0,2,True,1,1,array_int ,java
cnt_zeroes.java,3,13,11,7,7,9,49,4,12,['Integer [ ] a'],['array_Integer'],1,1,2,1,1,True,1,1,int ,java
cosineDist.java,5,22,20,15,15,18,142,4,21,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,5,10,3,True,2,1,array_Double ,java
count_k.java,3,13,11,7,7,9,52,4,12,"['Integer [ ] a', ' Integer k']","['array_Integer', 'Integer ']",2,1,2,1,1,True,1,1,int ,java
count_non_zeroes.java,3,13,11,7,7,9,49,4,12,['Integer [ ] a'],['array_Integer'],1,1,2,1,1,True,1,1,int ,java
covariance.java,2,18,16,13,13,14,113,4,17,"['Double [ ] elements1', ' Double [ ] elements2']","['array_Double', 'array_Double']",2,1,7,8,1,True,1,1,array_double ,java
dec.java,2,11,9,6,4,5,42,3,8,"['int [ ] array1', ' int [ ] array2']","['array_int', 'array_int']",2,1,1,2,5,False,0,NA,NA,java
dec_array.java,2,11,9,6,6,7,42,4,10,"['Integer [ ] a', ' Integer k']","['array_Integer', 'Integer ']",2,1,1,1,1,True,1,1,array_Integer ,java
dist.java,2,11,9,6,6,7,57,4,10,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,2,3,2,True,1,1,double ,java
distInf.java,2,11,9,6,6,7,64,4,10,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,2,2,3,True,1,1,double ,java
dot_product.java,2,12,10,7,7,8,54,4,11,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,2,2,1,True,1,1,int ,java
durbinWatson.java,2,13,11,8,8,9,61,4,12,['Double [ ] elements'],['array_Double'],1,1,4,3,1,True,1,1,array_double ,java
ebeAdd.java,3,14,12,8,8,10,72,4,13,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,1,1,2,True,2,1,array_Double ,java
ebeDivide.java,3,14,12,8,8,10,73,4,13,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,1,1,2,True,2,1,array_Double ,java
ebeMultiply.java,3,14,12,8,8,10,73,4,13,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,1,1,2,True,2,1,array_Double ,java
ebeSubtract.java,3,14,12,8,8,10,72,4,13,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,1,1,2,True,2,1,array_Double ,java
elemtWise_equal.java,3,15,13,9,9,11,79,4,14,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,0,2,True,1,1,array_boolean ,java
elemtWise_max.java,3,15,13,9,9,11,85,4,14,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,0,2,True,1,1,array_int ,java
elemtWise_min.java,3,15,13,9,9,11,85,4,14,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,0,2,True,1,1,array_int ,java
elemtWise_not_eq.java,3,15,13,9,9,11,79,4,14,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,0,2,True,1,1,array_boolean ,java
entropy.java,4,18,16,11,11,14,106,4,17,['final Double [ ] k'],['array_Double'],1,2,5,6,3,True,1,1,array_double ,java
equals.java,6,18,16,10,10,14,100,4,17,"['Double [ ] x', ' Double [ ] y']","['array_Double', 'array_Double']",2,1,1,1,1,True,4,1,array_Double ,java
errorRate.java,4,18,16,11,11,14,81,4,17,"['Double [ ] labels', ' Double [ ] predictions']","['array_Double', 'array_Double']",2,1,3,3,1,True,1,1,double ,java
euc_Dist.java,2,12,10,6,6,8,72,2,9,"['double [ ] array1', ' double [ ] array2']","['array_double', 'array_double']",2,0,2,5,3,True,1,1,array_double ,java
evalNewton.java,2,12,10,7,7,8,74,4,11,"['Double [ ] a', ' Double [ ] c', ' Double z']","['array_Double', 'array_Double', 'Double ']",3,1,3,4,1,True,1,1,array_double ,java
evaluateHoners.java,2,12,10,7,7,8,61,4,11,"['Double [ ] coefficients', ' Double argument']","['array_Double', 'Double ']",2,1,3,3,1,True,1,1,array_double ,java
evalWeightedProd.java,2,12,10,7,7,8,76,4,11,"['final Double [ ] values', ' final Double [ ] weights', ' final Integer begin', ' final Integer length']","['array_Double', 'array_Double', 'Integer ', 'Integer ']",4,1,2,2,2,True,1,1,double ,java
eval_Internal.java,6,38,36,29,29,34,290,4,37,"['Double [ ] x', ' Double [ ] y', ' Double z']","['array_Double', 'array_Double', 'Double ']",3,3,12,15,3,True,1,1,array_double ,java
find_diff.java,2,12,10,7,7,8,65,4,11,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,1,1,2,True,1,1,array_int ,java
find_euc_Dist.java,2,13,11,8,8,9,78,4,12,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,3,4,2,True,1,1,double ,java
find_magnitude.java,2,13,11,8,8,9,59,4,12,['Integer [ ] a'],['array_Integer'],1,1,3,3,2,True,1,1,double ,java
find_max.java,3,13,11,7,7,9,56,4,12,['Integer [ ] a'],['array_Integer'],1,1,2,0,1,True,1,1,array_int ,java
find_max2.java,3,13,11,7,7,9,77,4,12,['Integer [ ] a'],['array_Integer'],1,1,2,2,1,True,1,1,array_int ,java
find_median.java,5,27,25,19,19,23,180,4,26,['Integer [ ] a'],['array_Integer'],1,2,6,6,5,True,2,1,array_int ,java
find_min.java,3,14,12,8,8,10,58,4,13,['Integer [ ] a'],['array_Integer'],1,1,2,0,1,True,1,1,array_int ,java
geometric_mean.java,2,11,9,6,6,7,57,4,10,['Integer [ ] a'],['array_Integer'],1,1,2,3,3,True,1,1,array_Integer ,java
get_array_value.java,3,11,9,6,6,7,45,4,10,"['Integer [ ] a', ' Integer k']","['array_Integer', 'Integer ']",2,0,0,2,0,True,2,1,array_Integer ,java
g_Test.java,5,24,22,17,17,20,181,4,23,"['final Double [ ] expected', ' final Double [ ] observed']","['array_Double', 'array_Double']",2,2,8,9,3,True,1,1,array_double ,java
hamming_dist.java,3,13,11,7,7,9,57,4,12,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,2,1,1,True,1,1,int ,java
harmonicMean.java,2,11,9,6,6,7,48,4,10,['Double [ ] data'],['array_Double'],1,1,2,3,2,True,1,1,array_Double ,java
insertion_sort.java,4,16,14,10,10,12,82,4,15,['Integer [ ] array'],['array_Integer'],1,2,3,2,1,True,1,1,array_int ,java
kurtosis.java,3,20,18,14,14,16,149,4,19,['Double [ ] data'],['array_Double'],1,2,8,16,7,True,1,1,array_Double ,java
lag.java,2,18,16,13,13,14,127,4,17,"['Double [ ] elements', ' Double mean']","['array_Double', 'Double ']",2,1,7,13,1,True,1,1,array_double ,java
manhattanDist.java,2,12,10,7,7,8,59,4,11,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,2,3,2,True,1,1,double ,java
manhattanDist2.java,2,11,9,6,6,7,59,4,10,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,2,3,2,True,1,1,double ,java
max.java,3,14,12,8,8,10,64,4,13,['Double [ ] elements'],['array_Double'],1,1,3,1,1,True,1,1,array_double ,java
meanDeviation.java,2,12,10,7,7,8,58,4,11,"['Double [ ] elements', ' Double mean']","['array_Double', 'Double ']",2,1,3,4,2,True,1,1,double ,java
mean_abs_error.java,2,11,9,6,6,7,64,4,10,"['Integer [ ] a', ' Integer [ ] b']","['array_Integer', 'array_Integer']",2,1,2,4,3,True,1,1,array_Integer ,java
mean_Diff.java,2,11,9,6,6,7,58,4,10,"['final Double [ ] sample1', ' final Double [ ] sample2']","['array_Double', 'array_Double']",2,1,2,0,2,True,1,1,double ,java
min.java,3,14,12,8,8,10,64,4,13,['Double [ ] elements'],['array_Double'],1,1,3,1,1,True,1,1,array_double ,java
partition.java,9,29,27,20,20,25,173,4,28,"['final Double [ ] work', ' final Integer begin', ' final Integer end', ' final Integer pivot']","['array_Double', 'Integer ', 'Integer ', 'Integer ']",4,3,4,7,0,True,1,1,array_double ,java
polevl.java,2,13,11,8,8,9,57,4,12,"['Double x', ' Double [ ] coef', ' Integer N']","['Double ', 'array_Double', 'Integer ']",3,1,2,2,0,True,1,1,array_Double ,java
pooledMean.java,3,17,15,11,11,13,117,4,16,"['Double [ ] data1', ' Double [ ] data2']","['array_Double', 'array_Double']",2,2,6,7,7,True,1,1,array_Double ,java
pooledVariance.java,3,23,21,17,17,19,181,4,22,"['Double [ ] data1', ' Double [ ] data2']","['array_Double', 'array_Double']",2,2,10,17,9,True,1,1,array_Double ,java
power.java,2,10,8,5,5,6,50,4,9,"['Double [ ] data', ' Integer k']","['array_Double', 'Integer ']",2,1,1,1,2,True,1,1,array_Double ,java
product.java,2,12,10,7,7,8,47,4,11,['Double [ ] elements'],['array_Double'],1,1,3,1,1,True,1,1,double ,java
quantile.java,3,20,18,14,14,16,106,4,19,"['Double [ ] sortedElements', ' Double phi']","['array_Double', 'Double ']",2,0,5,6,1,True,2,1,array_Double ,java
reverse.java,2,13,11,8,8,9,63,4,12,['Integer [ ] a'],['array_Integer'],1,1,2,1,2,True,1,1,array_int ,java
safeNorm.java,11,58,56,45,45,54,336,4,57,['Double [ ] v'],['array_Double'],1,1,16,39,7,True,1,1,array_double ,java
sampleKurtosis.java,1,10,8,6,6,6,95,4,9,"['Integer size', ' Double moment4', ' Double sampleVariance']","['Integer ', 'Double ', 'Double ']",3,0,3,5,0,True,1,1,double ,java
sampleSkew.java,1,10,8,6,6,6,60,4,9,"['Integer size', ' Double moment3', ' double sampleVariance']","['Integer ', 'Double ', 'double ']",3,0,3,5,1,True,1,1,int ,java
sampleVariance.java,2,13,11,8,8,9,64,4,12,"['Double [ ] elements', ' Double mean']","['array_Double', 'Double ']",2,1,4,5,1,True,1,1,array_double ,java
sampleWeightedVar.java,2,15,13,10,10,11,100,4,14,"['Double [ ] data', ' Double [ ] weights']","['array_Double', 'array_Double']",2,1,4,8,1,True,1,1,double ,java
scale.java,2,11,9,6,6,7,59,4,10,"['Double val', ' final Double [ ] arr']","['Double ', 'array_Double']",2,1,1,1,2,True,1,1,array_double ,java
selection_sort.java,4,21,19,14,14,17,106,4,20,['Integer [ ] list'],['array_Integer'],1,2,4,0,2,True,1,1,array_int ,java
sequential_search.java,3,13,11,7,7,9,50,4,12,"['Integer [ ] a', ' Integer key']","['array_Integer', 'Integer ']",2,1,1,1,1,True,2,1,array_Integer ,java
set_min_val.java,3,13,11,7,7,9,53,4,12,"['Integer [ ] a', ' Integer k']","['array_Integer', 'Integer ']",2,1,1,0,1,True,1,1,array_Integer ,java
shell_sort.java,5,22,22,16,16,20,129,2,21,['Integer [ ] a'],['array_Integer'],1,3,4,2,2,True,1,1,array_Integer ,java
skew.java,3,20,18,14,14,16,144,4,19,['Double [ ] data'],['array_Double'],1,2,8,14,7,True,1,1,double ,java
square.java,2,10,8,5,5,6,45,4,9,['Double [ ] data'],['array_Double'],1,1,1,1,1,True,1,1,array_Double ,java
standardize.java,3,18,16,12,12,14,122,4,17,['Double [ ] data'],['array_Double'],1,2,6,10,5,True,1,1,array_Double ,java
sum.java,2,11,9,6,6,7,30,4,10,['Integer [ ] values'],['array_Integer'],1,1,1,1,0,True,1,1,int ,java
sumOfLogarithms.java,2,11,9,6,6,7,47,4,10,['Double [ ] elements'],['array_Double'],1,1,2,4,2,True,1,1,double ,java
sum_labeled.java,5,11,9,6,6,7,61,4,10,"['int [ ] a', ' int i', ' int j']","['array_int', 'int ', 'int ']",3,0,0,3,0,True,2,1,array_double ,java
sum_Power_Deviat.java,2,11,9,6,6,7,57,4,10,"['Double [ ] data', ' Integer k', ' Double c']","['array_Double', 'Integer ', 'Double ']",3,1,2,3,2,True,1,1,double ,java
s_add.java,2,8,7,4,4,5,42,2,6,"['int [ ] array1', ' int [ ] array2']","['array_int', 'array_int']",2,1,1,1,1,False,0,NA,NA,java
tanimotoDist.java,4,23,21,16,16,19,129,4,22,"['Double [ ] p1', ' Double [ ] p2']","['array_Double', 'array_Double']",2,1,5,10,1,True,2,1,array_Double ,java
variance.java,3,19,17,13,13,15,121,4,18,['Double [ ] x'],['array_Double'],1,2,6,6,4,True,1,1,double ,java
var_Difference.java,3,21,19,15,15,17,143,4,20,"['final Double [ ] sample1', ' final Double [ ] sample2']","['array_Double', 'array_Double']",2,2,8,3,1,True,1,1,double ,java
weightedMean.java,2,15,13,10,10,11,76,4,14,"['Double [ ] elements', ' Double [ ] theWeights']","['array_Double', 'array_Double']",2,1,5,4,1,True,1,1,array_double ,java
weightedRMS.java,2,13,11,8,8,9,76,4,12,"['Double [ ] data', ' Double [ ] weights']","['array_Double', 'array_Double']",2,1,3,4,1,True,1,1,double ,java
weighted_average.java,2,13,11,8,8,9,66,4,12,"['Double [ ] a', ' Double [ ] b']","['array_Double', 'array_Double']",2,1,3,4,1,True,1,1,double ,java
winsorizedMean.java,4,21,19,14,14,17,146,4,20,"['Double [ ] sortedElements', ' Integer left', ' Integer right']","['array_Double', 'Integer ', 'Integer ']",3,3,8,9,3,True,1,1,array_double ,java
